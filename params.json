{"name":"Seep -  Stateful Big Data Processing","tagline":"","body":"# Overview\r\n\r\nSEEP is an experimental parallel data processing system that is being developed\r\nby the Large-Scale Distributed Systems (LSDS) research group\r\n(http://lsds.doc.ic.ac.uk) at Imperial College London. It is licensed under\r\nEPL (Eclipse Public License).\r\n\r\nThe SEEP system is under heavy development and should be considered an alpha\r\nrelease. This is not considered a \"stable\" branch.\r\n\r\nFurther details on SEEP, including papers that explain the underlying model \r\ncan be found at the project website:\r\nhttp://lsds.doc.ic.ac.uk/projects/SEEP\r\n\r\nThe SEEP system consists of two modules, the runtime system (seep-system) and a\r\ncompiler (java2sdg). Below is some information regarding how to build the\r\nsystem and modules.\r\n\r\n# Building it\r\n\r\nThe project follows the standard Maven directory structure, with two\r\ndifferentiated modules, seep-system and seep-java2sdg.\r\n\r\nThere are two options to build the SEEP system:\r\n\r\nOption 1, single jar (recommended) -- run:\r\n\r\nmvn clean compile assembly:single\r\n\r\nThis produces one jar with all dependencies included.\r\n\r\nOption 2, without dependencies -- to compile it:\r\n\r\nmvn -DskipTests package\r\n\r\nIn this case, ensure that the classpath includes the dependencies.\r\n\r\nYou can alternatively build only individual modules, by running the same\r\noptions above inside seep-system or seep-java2sdg, respectively.\r\n\r\n# Running it\r\n\r\n## Seep System\r\n\r\nThe system requires one master node and N worker nodes (one worker node per\r\nOperator).\r\n\r\nFirst set the IP address of the master node in \"mainAddr\" inside\r\nconfig.properties and build the SEEP system.\r\n\r\nNext run the master in the designated node:\r\n\r\njava -jar <system.jar> Master <query.jar> <Base-class>\r\n\r\nwhere query.jar is the compiled query and the last parameter is the name of \r\nthe base class, not a path.\r\n\r\nFinally run as many worker nodes as your query requires:\r\n\r\njava -jar <system.jar> Worker\r\n\r\nLocal mode:\r\n\r\nTo run the SEEP system in a single local machine, append a different port to\r\neach Worker node:\r\n\r\njava -jar <system.jar> Worker <port>\r\n\r\n## Seep Java2sdg\r\n\r\nIt is mandatory to indicate an input program, an output file name and a target\r\n(dot/seepjar) and the classpath to the driver program and its dependencies.\r\nExamples: \r\n\r\njava -jar <java2sdg.jar> -i Driver -t dot -o myOutput -cp examples/\r\n\r\nThe above code will process input program \"Driver\" using the dependencies in\r\n\"examples/\" to generate an output file \"myOutput.dot\".\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}